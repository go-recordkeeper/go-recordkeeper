<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nginx on Dev Blog</title>
    <link>https://go.chiquit.ooo/blog/tags/nginx/</link>
    <description>Recent content in nginx on Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 Apr 2023 14:33:42 -0400</lastBuildDate><atom:link href="https://go.chiquit.ooo/blog/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cleanup</title>
      <link>https://go.chiquit.ooo/blog/posts/25-cleanup/</link>
      <pubDate>Thu, 20 Apr 2023 14:33:42 -0400</pubDate>
      
      <guid>https://go.chiquit.ooo/blog/posts/25-cleanup/</guid>
      <description>I&amp;rsquo;ve been leaving a mess in my wake as I&amp;rsquo;ve been pushing through the Haskell and Rust implementations, so it&amp;rsquo;s time to pay down some technical debt. Fortunately the GitHub issue tracker has been a useful place to dump problems I didn&amp;rsquo;t want to deal with in the moment, so at least I had an angle of attack.
API Cleanup X/Y &amp;gt; Index For a while now, I&amp;rsquo;ve been suffering from some data modeling gotcha&amp;rsquo;s that are sort of a generally hard problem.</description>
    </item>
    
    <item>
      <title>Monorepo</title>
      <link>https://go.chiquit.ooo/blog/posts/10-monorepo/</link>
      <pubDate>Mon, 14 Nov 2022 20:36:14 -0500</pubDate>
      
      <guid>https://go.chiquit.ooo/blog/posts/10-monorepo/</guid>
      <description>I bit the bullet and coallesced all the repositories into a single monorepo: go-recordkeeper. This looks less impressive, in the GitHub organization view, but is generally much nicer to work with. I left the old repositories there just to avoid breaking all those links, so I guess the trail of corpses is still imposing.
RIP git submodules ðŸ˜­
Monorepofication The conversion process was rather lengthy and quite involved. I hope that my case was abnormally difficult because I had a lot of submodules that needed conversion into relative paths, but I cringe to think how much harder it would have been with more coworkers, possibly committing work at the same time.</description>
    </item>
    
    <item>
      <title>State of the App</title>
      <link>https://go.chiquit.ooo/blog/posts/state-of-the-app/</link>
      <pubDate>Thu, 22 Sep 2022 10:48:24 -0400</pubDate>
      
      <guid>https://go.chiquit.ooo/blog/posts/state-of-the-app/</guid>
      <description>Before I get into the technical details of the new apps I&amp;rsquo;m building, it would be helpful to describe the reference implementation, you know, for reference.
The app, in a nutshell Go Recordkeeper is a relatively simple Single Page Application. You can:
 Log in + Sign up Create new records See/edit your old records Add/undo moves in a record Review the moves played in a record Download .sgf files containing records  The intended user is of course me, but I wanted to add a proper auth flow and support multiple users so that anyone who wants to use it, can.</description>
    </item>
    
  </channel>
</rss>
