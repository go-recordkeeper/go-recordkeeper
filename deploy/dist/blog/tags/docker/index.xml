<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Dev Blog</title>
    <link>https://go.chiquit.ooo/blog/tags/docker/</link>
    <description>Recent content in docker on Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Mar 2023 21:02:10 -0500</lastBuildDate><atom:link href="https://go.chiquit.ooo/blog/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Finishing Haskell Deployment</title>
      <link>https://go.chiquit.ooo/blog/posts/22-finishing-haskell-deployment/</link>
      <pubDate>Thu, 09 Mar 2023 21:02:10 -0500</pubDate>
      
      <guid>https://go.chiquit.ooo/blog/posts/22-finishing-haskell-deployment/</guid>
      <description>After a month of respite, I have finally mustered the courage to get the Haskell implementation deployed and achieve some closure.
Building Haskell My first step was to simply retry the build and hope it just works. Not only did the Haskell build continue to crash, but the FastAPI build also began failing. So that was swell.
Making Pi from scratch My next step was to switch to a different Raspberry Pi, do a clean reinstall, and start from scratch.</description>
    </item>
    
    <item>
      <title>Wrapping Up Haskell</title>
      <link>https://go.chiquit.ooo/blog/posts/21-wrapping-up-haskell/</link>
      <pubDate>Tue, 07 Feb 2023 21:50:18 -0500</pubDate>
      
      <guid>https://go.chiquit.ooo/blog/posts/21-wrapping-up-haskell/</guid>
      <description>I&amp;rsquo;ve been procrastinating on the &amp;ldquo;final&amp;rdquo; Haskell post until I reached a point with some closure, so there&amp;rsquo;s quite a list.
Download The only remaining API endpoint is the download endpoint. This is non-trivial because it requires converting the record details and move list into a .sgf file.
I first tried using the sgf hackage package. Sadly it wasn&amp;rsquo;t included in the stackage (Haskell has two package repositories; anyone can upload anything to hackage, while stackage is a curated subset of hackage packages that are known to work).</description>
    </item>
    
    <item>
      <title>Integration Testing Harness</title>
      <link>https://go.chiquit.ooo/blog/posts/5-integration-testing-harness/</link>
      <pubDate>Sun, 30 Oct 2022 20:23:47 -0400</pubDate>
      
      <guid>https://go.chiquit.ooo/blog/posts/5-integration-testing-harness/</guid>
      <description>I&amp;rsquo;m back from vacation and it&amp;rsquo;s time to get testing. I need a test harness that can verify any goban-server implementation is correct. Every test should be run against a real service with a real database behind it.
The plan I already have one and a half goban-server implementations written in python and deployed with docker-compose. Therefore,
 Services being tested are started/stopped using docker-compose. Tests are written in Python+pytest.  Unfortunately, this has some corolaries:</description>
    </item>
    
  </channel>
</rss>
