version: '3'
services:

  postgres:
    image: 'postgres:latest'
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: default

  django:
    build: ../server/django
    command: python manage.py runserver 0.0.0.0:8000 # TODO gunicorn
    volumes:
      - ../server/django/:/goban
    ports:
      - 8000:8000
    env_file:
      - .env.django
    environment:
      POSTGRES_NAME: default
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres # this refers to the postgres service above ^
      GOBAN_HOST: go.chiquit.ooo
      LETSENCRYPT_HOST: go.chiquit.ooo
      VIRTUAL_HOST: go.chiquit.ooo
      VIRTUAL_PORT: 8000
      VIRTUAL_PATH: /api/
      VIRTUAL_PROTO: http
    depends_on:
      - postgres

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - /usr/share/nginx/html
      - ./conf.d:/etc/nginx/conf.d
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./dist:/dist

  dockergen:
    image: nginxproxy/docker-gen
    container_name: dockergen
    command: -notify-sighup nginx -watch /etc/docker-gen/templates/nginx.tmpl
      /etc/nginx/conf.d/default.conf
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
  
  letsencrypt:
    image: nginxproxy/acme-companion
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme:/etc/acme.sh
    environment:
      DEFAULT_EMAIL: daniel.chiquito@gmail.com
      NGINX_DOCKER_GEN_CONTAINER: dockergen