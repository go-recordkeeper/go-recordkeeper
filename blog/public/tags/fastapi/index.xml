<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fastapi on Dev Blog</title>
    <link>https://go.chiquit.ooo/blog/tags/fastapi/</link>
    <description>Recent content in fastapi on Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Nov 2022 14:22:45 -0500</lastBuildDate><atom:link href="https://go.chiquit.ooo/blog/tags/fastapi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vertical Slice Architecture</title>
      <link>https://go.chiquit.ooo/blog/posts/7-vertical-slice-architecture/</link>
      <pubDate>Wed, 09 Nov 2022 14:22:45 -0500</pubDate>
      
      <guid>https://go.chiquit.ooo/blog/posts/7-vertical-slice-architecture/</guid>
      <description>I&amp;rsquo;ve been flipping through some NDC Conference recordings, and one of the talks caught my eye (also a considerably more succinct blog post, if you don&amp;rsquo;t have an hour to kill).
For context, the traditional .NET web application is designed in layers (the &amp;ldquo;onion model&amp;rdquo;, apparently?), with the database feeding up into the repository into the service into the UI. All of your SQL queries live in one place, which is separate from where your business logic lives, which is separate from your REST API, which is separate from your UI components.</description>
    </item>
    
    <item>
      <title>FastAPI Testing</title>
      <link>https://go.chiquit.ooo/blog/posts/4-fastapi-testing/</link>
      <pubDate>Thu, 06 Oct 2022 16:43:23 -0400</pubDate>
      
      <guid>https://go.chiquit.ooo/blog/posts/4-fastapi-testing/</guid>
      <description>As previously mentioned, the next step is to add pytest for unit testing. Mission accomplished.
This was pretty run of the mill testing stuff so I didn&amp;rsquo;t really learn anything, but I&amp;rsquo;m trying to write something for every unit of work I do, so I shall expound on my testing philosophies instead.
Unit tests: just say no For the record, I love tests. I worked for several years doing automated browser testing and enjoyed it.</description>
    </item>
    
    <item>
      <title>Introducing FastAPI</title>
      <link>https://go.chiquit.ooo/blog/posts/introducing-fastapi/</link>
      <pubDate>Wed, 05 Oct 2022 20:11:48 -0400</pubDate>
      
      <guid>https://go.chiquit.ooo/blog/posts/introducing-fastapi/</guid>
      <description>I decided that my first alternative implementation will be using FastAPI. FastAPI is purportedly a very lightweight and very fast Python web framework. While Django is &amp;ldquo;batteries included&amp;rdquo;, FastAPI is all about stripped down minimalism.
I know I hyped up learning funky new languages, but FastAPI is a new framework to me and I will also get some practice good practice reimplementing Django stuff in a somewhat familiar environment where copy/pasting is easy.</description>
    </item>
    
  </channel>
</rss>
