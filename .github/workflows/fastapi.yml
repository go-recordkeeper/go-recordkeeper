name: FastAPI
on:
  push:
    paths:
      - 'server/fastapi/**'
      - 'test/**'
      - '.github/workflows/fastapi.yml'
jobs:
  linting:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server/fastapi
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Setup Python and Poetry
        uses: ITProKyle/action-setup-python@v0.3.0
        with:
          python-version: 3.11
          poetry-version: 1.4.0
          poetry-install: false
      - name: Install FastAPI service
        run: poetry install
      - name: Run isort
        run: poetry run isort --check goban_server_fastapi
      - name: Run black
        run: poetry run black --check goban_server_fastapi
  unit-tests:
    runs-on: ubuntu-latest
    needs: linting
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: default
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    defaults:
      run:
        working-directory: server/fastapi
    env:
      POSTGRES_NAME: default
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost
      GOBAN_DEVELOPMENT: true
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Setup Python and Poetry
        uses: ITProKyle/action-setup-python@v0.3.0
        with:
          python-version: 3.11
          poetry-version: 1.4.0
          poetry-install: false
      # This is an awful solution
      - name: Initialize the database
        working-directory: server/django
        run: |
          # Install the Django app
          pip install . &&
          # Use it to do the initial DB migration, setting up all the tables
          python manage.py migrate
      - name: Install FastAPI service
        run: poetry install
      - name: Run tests
        run: poetry run pytest

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    defaults:
      run:
        shell: bash
        working-directory: test
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Setup Python and Poetry
        uses: ITProKyle/action-setup-python@v0.3.0
        with:
          python-version: 3.11
          # poetry 1.4.0 fails to install FastAPI
          poetry-version: 1.3.2
          poetry-install: false
      - name: Install tests
        shell: bash
        run: |
          cp .env.template .env
          # Required to export all the values in the .env file
          set -a
          source .env
          set +a
          poetry install
      - name: Run tests
        shell: bash
        run: |
          # Required to export all the values in the .env file
          set -a &&
          source .env &&
          set +a &&
          set -e &&
          poetry run test -- -k "fastapi"
